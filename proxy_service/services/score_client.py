# proxy_service/services/score_client.py

import httpx
import json
import re # Importa a biblioteca de express√µes regulares

# A URL correta, conforme a documenta√ß√£o do Swagger
EXTERNAL_API_URL = "https://score.hsborges.dev/api/score"

def fetch_score_data(params: dict, headers: dict):
    """
    Faz a requisi√ß√£o GET real para a API externa, incluindo os headers.
    """
    # Garante que estamos enviando apenas os n√∫meros do CPF, removendo pontos e tra√ßos.
    if 'cpf' in params:
        params['cpf'] = re.sub(r'[^\d]', '', params['cpf'])

    print(f"üì° Fazendo requisi√ß√£o para API externa com par√¢metros: {params} e headers: {headers}...")
    try:
        with httpx.Client(timeout=10.0, headers=headers) as client:
            response = client.get(EXTERNAL_API_URL, params=params)
            response.raise_for_status()

            print(f"‚úÖ Resposta recebida da API externa: {response.status_code}")
            return response.json()

    except httpx.RequestError as exc:
        print(f"‚ùå Ocorreu um erro na requisi√ß√£o: {exc}")
        return None
    except httpx.HTTPStatusError as exc:
        print(f"‚ùå Erro de status HTTP: {exc.response.status_code} - {exc.response.text}")
        return None
    except json.JSONDecodeError:
        print(f"‚ùå Erro de decodifica√ß√£o: A API n√£o retornou um JSON v√°lido.")
        return None